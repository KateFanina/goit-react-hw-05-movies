{"version":3,"file":"static/js/770.b0e9679b.chunk.js","mappings":"gTAkBaA,GAhBUC,EAAAA,GAAAA,IAAH,0NAYFA,EAAAA,GAAAA,GAAH,4CAIGA,EAAAA,GAAAA,GAAH,0FAMFC,EAASD,EAAAA,GAAAA,IAAH,iIAmBNE,GAXQF,EAAAA,GAAAA,IAAH,8MAWMA,EAAAA,GAAAA,GAAH,wJ,SCSrB,EA7Ca,WACX,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MACiBC,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,iGAEaC,EAAAA,EAAAA,IAAgBD,GAF7B,OAERE,EAFQ,OAGdN,GAAS,OAAIM,EAAaC,KAAKC,OAHjB,yEAKP,IAAIC,OALG,yDAAH,sDAQfN,EAAUP,EACX,GAAE,CAACA,KAGF,+BACKG,EAAMW,SACP,SAACf,EAAD,iBACGI,QADH,IACGA,OADH,EACGA,EAAOY,KAAI,SAAAH,GAAI,OACd,UAAChB,EAAD,YACE,SAACE,EAAD,CACEkB,IACM,OAAJJ,QAAI,IAAJA,GAAAA,EAAMK,aAAN,0CACuCL,EAAKK,cACxCC,EAENC,IAAKP,EAAKQ,QAEZ,0BACE,iCADF,IACgBR,EAAKQ,SAErB,0BACE,sCADF,IACqBR,EAAKS,eAbnBT,EAAKU,QADA,OAsBzB,C","sources":["components/Cast.styled.js","components/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const MainDiv = styled.div`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-gap: 16px;\r\n  margin-top: 12px;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n  padding-left: 0;\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  list-style: none;\r\n  max-width: 210px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Person = styled.img`\r\n  display: block;\r\n  margin-top: 20px;\r\n  height: 310px;\r\n  /* width: 360px; */\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: grid;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  grid-column-gap: 1em;\r\n  grid-row-gap: 1em;\r\n  grid-auto-flow: row;\r\n`;\r\n\r\nexport const CastLink = styled.ul`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n  margin-top: 0;\r\n  padding-left: 10px;\r\n`;\r\n","import { useLocation } from 'react-router-dom';\r\nimport { getMovieCredits } from '../actions/action';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport emptyPoster from '../resources/emptyPoster.webp';\r\nimport { Li, CastLink, Person } from '../components/Cast.styled';\r\n\r\nconst Cast = () => {\r\n  const { id } = useParams();\r\n  const [casts, setCasts] = useState([]);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const fetchCast = async movieId => {\r\n      try {\r\n        const castResponce = await getMovieCredits(movieId);\r\n        setCasts([...castResponce.data.cast]);\r\n      } catch (error) {\r\n        return new Error();\r\n      }\r\n    };\r\n    fetchCast(id);\r\n  }, [id]);\r\n\r\n  return (\r\n    <section>\r\n      {!!casts.length && (\r\n        <CastLink>\r\n          {casts?.map(cast => (\r\n            <Li key={cast.cast_id}>\r\n              <Person\r\n                src={\r\n                  cast?.profile_path\r\n                    ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\r\n                    : emptyPoster\r\n                }\r\n                alt={cast.name}\r\n              />\r\n              <p>\r\n                <b>Name:</b> {cast.name}\r\n              </p>\r\n              <p>\r\n                <b>Character:</b> {cast.character}\r\n              </p>\r\n            </Li>\r\n          ))}\r\n        </CastLink>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n"],"names":["Li","styled","Person","CastLink","id","useParams","useState","casts","setCasts","useLocation","useEffect","fetchCast","movieId","getMovieCredits","castResponce","data","cast","Error","length","map","src","profile_path","emptyPoster","alt","name","character","cast_id"],"sourceRoot":""}