{"version":3,"file":"static/js/452.f65e83aa.chunk.js","mappings":"4SAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6P,SCSvB,EATiB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,oBCPYE,EAAUL,EAAAA,GAAAA,IAAH,4DAKPM,EAAcN,EAAAA,GAAAA,IAAH,0CAGXO,EAAQP,EAAAA,GAAAA,GAAH,4CAGLQ,EAAMR,EAAAA,GAAAA,IAAH,kEAIHS,EAAYT,EAAAA,GAAAA,IAAH,8CAGTU,EAAYV,EAAAA,GAAAA,IAAH,0CAGTW,EAAYX,EAAAA,GAAAA,IAAH,iNAWTY,GAAQZ,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qECuDlB,EAxEqB,WAAO,IAAD,MACjBa,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMC,GAAN,iGAEQC,EAAAA,EAAAA,IAAgBD,GAFxB,OAEXE,EAFW,OAGjBL,EAAWK,EAAWC,MAHL,yEAKV,IAAIC,OALM,yDAAH,sDAQlBL,EAAaN,EACd,GAAE,CAACA,IAEJ,IACMY,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACvCC,EAAM,OAAGb,QAAH,IAAGA,GAAH,UAAGA,EAASa,cAAZ,aAAG,EAAiBC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAC9D,OACE,6BACE,SAAC,EAAD,CAAU/B,GAAE,UAAKuB,GAAjB,uBACGS,OAAOC,KAAKnB,GAASoB,SACtB,iCACE,UAAC/B,EAAD,YACE,SAACG,EAAD,CACE6B,IACErB,EAAQsB,YAAR,0CACuCtB,EAAQsB,aAC3CC,EAENC,IAAKxB,EAAQyB,SAEf,UAACnC,EAAD,YACE,SAACC,EAAD,UAAQS,EAAQyB,SAChB,wCAEE,6BAA+B,GAAvBzB,EAAQ0B,cAAmBC,UAAnC,WAEF,wBACE,uCAEF,uBAAI3B,EAAQ4B,YACZ,wBACE,qCAEF,0BAAOf,GAAU,YAGrB,SAACpB,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAOV,GAAG,OAAOyB,MAAO,CAAEC,KAAK,GAAD,OAAKH,IAAnC,qBAIF,SAACd,EAAD,WACE,SAACC,EAAD,CAAOV,GAAG,UAAUyB,MAAO,CAAEC,KAAK,GAAD,OAAKH,IAAtC,6BAMN,SAAC,EAAAoB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/BackLink.styled.js","components/BackLink.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  padding: 8px 0;\r\n  margin: 16px 0;\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n\r\n  :hover {\r\n    color: orangered;\r\n  }\r\n`;\r\n","import { HiArrowLeft } from 'react-icons/hi';\r\nimport { StyledLink } from './BackLink.styled';\r\n\r\nconst BackLink = ({ to, children }) => {\r\n  return (\r\n    <StyledLink to={to}>\r\n      <HiArrowLeft size=\"24\" />\r\n      {children}\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nexport default BackLink;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  padding: 12px;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  padding: 20px;\r\n`;\r\nexport const Title = styled.h2`\r\n  margin-top: 0px;\r\n`;\r\nexport const Img = styled.img`\r\n  height: 400px;\r\n  border-radius: 10px;\r\n`;\r\nexport const AdditInfo = styled.div`\r\n  margin-left: 20px;\r\n`;\r\nexport const AdditList = styled.div`\r\n  display: flex;\r\n`;\r\nexport const AdditItem = styled.div`\r\n  margin-right: 30px;\r\n  border: 2px solid black;\r\n  padding: 10px;\r\n  list-style: none;\r\n  &:hover {\r\n    background-color: orangered;\r\n    color: white;\r\n    border: 2px solid;\r\n  }\r\n`;\r\nexport const LinkA = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n`;\r\n","import { Suspense } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport BackLink from 'components/BackLink';\r\nimport { getMovieDetails } from '../actions/action';\r\nimport emptyPoster from '../resources/emptyPoster.webp';\r\nimport {\r\n  Wrapper,\r\n  Description,\r\n  Title,\r\n  Img,\r\n  AdditInfo,\r\n  AdditList,\r\n  AdditItem,\r\n  LinkA,\r\n} from '../pages/MovieDetails.styled';\r\n\r\nconst MovieDetails = () => {\r\n  const { id } = useParams();\r\n  const [details, setDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchDetails = async movieId => {\r\n      try {\r\n        const newDetails = await getMovieDetails(movieId);\r\n        setDetails(newDetails.data);\r\n      } catch (error) {\r\n        return new Error();\r\n      }\r\n    };\r\n    fetchDetails(id);\r\n  }, [id]);\r\n\r\n  const location = useLocation();\r\n  const backLinkHref = location.state?.from ?? '/movies';\r\n  const genres = details?.genres?.map(genre => genre.name).join(', ');\r\n  return (\r\n    <main>\r\n      <BackLink to={`${backLinkHref}`}>Go back</BackLink>\r\n      {!!Object.keys(details).length && (\r\n        <>\r\n          <Wrapper>\r\n            <Img\r\n              src={\r\n                details.poster_path\r\n                  ? `https://image.tmdb.org/t/p/w500/${details.poster_path}`\r\n                  : emptyPoster\r\n              }\r\n              alt={details.title}\r\n            />\r\n            <Description>\r\n              <Title>{details.title}</Title>\r\n              <p>\r\n                User score:\r\n                <span>{(details.vote_average * 10).toFixed()}%</span>\r\n              </p>\r\n              <p>\r\n                <b>Overview</b>\r\n              </p>\r\n              <p>{details.overview}</p>\r\n              <p>\r\n                <b>Genres</b>\r\n              </p>\r\n              <span>{genres || ''}</span>\r\n            </Description>\r\n          </Wrapper>\r\n          <AdditInfo>\r\n            <AdditList>\r\n              <AdditItem>\r\n                <LinkA to=\"cast\" state={{ from: `${backLinkHref}` }}>\r\n                  Cast\r\n                </LinkA>\r\n              </AdditItem>\r\n              <AdditItem>\r\n                <LinkA to=\"reviews\" state={{ from: `${backLinkHref}` }}>\r\n                  Reviews\r\n                </LinkA>\r\n              </AdditItem>\r\n            </AdditList>\r\n          </AdditInfo>\r\n          <Suspense fallback={<div>Loading subpage...</div>}>\r\n            <Outlet />\r\n          </Suspense>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"names":["StyledLink","styled","Link","to","children","size","Wrapper","Description","Title","Img","AdditInfo","AdditList","AdditItem","LinkA","id","useParams","useState","details","setDetails","useEffect","fetchDetails","movieId","getMovieDetails","newDetails","data","Error","backLinkHref","useLocation","state","from","genres","map","genre","name","join","Object","keys","length","src","poster_path","emptyPoster","alt","title","vote_average","toFixed","overview","Suspense","fallback"],"sourceRoot":""}